name: Build XMRig

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libhwloc-dev libuv1-dev
      - if: matrix.os == 'macos-latest'
        run: brew install hwloc libuv
      - if: matrix.os == 'windows-latest'
        name: Checkout xmrig-deps
        uses: actions/checkout@v4
        with:
          repository: xmrig/xmrig-deps
          path: deps

      - run: mkdir build && cd build
      - if: matrix.os == 'windows-latest'
        working-directory: build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DXMRIG_DEPS=${{ github.workspace }}/deps/msvc2022/x64
      - if: matrix.os != 'windows-latest'
        working-directory: build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release
      - working-directory: build
        run: cmake --build . --config Release --parallel

      - name: Test XMRig (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: build
        shell: powershell
        run: |
          if (Test-Path "Release\xmrig.exe") {
            .\Release\xmrig.exe --version
          } else {
            Write-Output "xmrig.exe not found in Release"
            exit 1
          }

      - name: Test XMRig (Linux/macOS)
        if: matrix.os != 'windows-latest'
        working-directory: build
        shell: bash
        run: |
          if [ -f xmrig ]; then
            ./xmrig --version
          else
            echo "xmrig not found"
            exit 1
          fi
        
      - uses: actions/upload-artifact@v4
        with:
          name: xmrig-build-${{ matrix.os }}
          path: build/
