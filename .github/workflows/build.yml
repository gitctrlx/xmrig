name: Build XMRig

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          
      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libhwloc-dev libuv1-dev
      - if: matrix.os == 'macos-latest'
        run: brew install hwloc libuv
      - if: matrix.os == 'windows-latest'
        run: vcpkg install hwloc:x64-windows libuv:x64-windows
      - if: matrix.os == 'windows-latest'
        name: Cache vcpkg installed
        uses: actions/cache@v4
        with:
          path: C:\vcpkg\installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: ${{ runner.os }}-vcpkg-

      - run: mkdir build && cd build
      - if: matrix.os == 'windows-latest'
        working-directory: build
        run: |
          cmake .. -DCMAKE_BUILD_TYPE=Release ^
             -DUV_INCLUDE_DIR=C:\vcpkg\installed\x64-windows\include ^
             -DUV_LIBRARY=C:\vcpkg\installed\x64-windows\lib\libuv.lib ^
             -DHWLOC_INCLUDE_DIR=C:\vcpkg\installed\x64-windows\include ^
             -DHWLOC_LIBRARY=C:\vcpkg\installed\x64-windows\lib\hwloc.lib
      - if: matrix.os != 'windows-latest'
        working-directory: build
        run: cmake .. -DCMAKE_BUILD_TYPE=Release
      - working-directory: build
        run: cmake --build . --config Release --parallel $(nproc || sysctl -n hw.logicalcpu || echo 4)
        
      - uses: actions/upload-artifact@v4
        with:
          name: xmrig-${{ matrix.os }}
          path: build/xmrig*
